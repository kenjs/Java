<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:flex="http://www.springframework.org/schema/flex"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/flex	http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
	<!--  CLOB 处理-->
	<bean id="lobHandler" lazy-init="true" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>

	<bean id="nativeJdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
	<!-- 因为Oracle9i处理Clob的方式和别的数据库很不一样,甚至与Oracle10g都不兼容,所以这里要用spring提供的SimpleNativeJdbcExtractor.如果使用Oracle10g的话,可以直接使用:
		<bean id="lobHandler" lazy-init="true"  class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>-->

    <context:annotation-config/>

    <!-- service dao auto scan injection -->
    <context:component-scan base-package="com.cy"/>


    <!-- database -->
    <context:property-placeholder location="classpath:database.properties"/>

    <!-- tomcat5: <bean id="wlfpDs" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
    <bean id="frmDs" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="maxActive" value="50" />
        <property name="maxIdle" value="20"></property>
        <property name="minIdle" value="5"></property>
        <property name="maxWait" value="60000"></property>
        <property name="validationQuery" value="select 1 from dual"/>
    </bean>
    
    <bean id="businessDs" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${business_driver}" />
		<property name="url" value="${business_url}" />
		<property name="username" value="${business_username}" />
		<property name="password" value="${business_password}" />
		<property name="maxActive" value="50" />
        <property name="maxIdle" value="20"></property>
        <property name="minIdle" value="5"></property>
        <property name="maxWait" value="60000"></property>
		<property name="validationQuery" value="select 1 from dual"/>
	</bean>
    
    <!--<jee:jndi-lookup id="wlfpDs" jndi-name="java:comp/env/jdbc/cyframework"/>-->


    <!-- ibatis -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="dataSource" ref="frmDs"/>
        <property name="lobHandler" ref="lobHandler"/>
        <property name="configLocations" value="classpath:/config/sqlmap/**/frm-*.xml"/>
    </bean>

    <bean id="frmSqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
        <property name="sqlMapClient" ref="sqlMapClient"/>
    </bean>
    
    <bean id="frmConEncodeSqlMapClientTemplate" class="com.cy.framework.common.SysSqlMapClientTemplate">
        <property name="sqlMapClient" ref="sqlMapClient"/>
    </bean>
    
    <bean id="sqlMapClientDaoSupport" class="org.springframework.orm.ibatis.support.SqlMapClientDaoSupport"
          abstract="true">
        <property name="sqlMapClientTemplate" ref="sqlMapClientTemplate"/>
    </bean>
    
    <bean id="businessSqlMapClient" class="com.cy.framework.orm.ibatis.spring.SysSqlMapClientFactoryBean">
		<property name="dataSource" ref="businessDs" />
		<property name="lobHandler" ref="lobHandler" />
		<property name="configLocations" value="classpath:/config/sqlmap/**/business-*.xml" />
	</bean>

	<bean id="businessSqlMapClientTemplate" class="com.cy.framework.common.SysSqlMapClientTemplate">
		<property name="sqlMapClient" ref="businessSqlMapClient" />
	</bean>

	<bean id="businessSqlMapClientDaoSupport" class="org.springframework.orm.ibatis.support.SqlMapClientDaoSupport" abstract="true">
		<property name="sqlMapClientTemplate" ref="businessSqlMapClientTemplate" />
	</bean>
    
    <!-- annotation transactionManager -->
    <tx:annotation-driven transaction-manager="myTransactionManager" proxy-target-class="true"/>

    <bean id="myTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref local="businessDs"/>
        </property>
    </bean>

</beans>